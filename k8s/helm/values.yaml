# Default values for picolytics.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

picolytics:
  server:
    staticDir: static
    rootRedirect: ""
    logFormat: json

  privacy:
    ipExtractor: direct # or xff or realip
    geoIpFile: geoip.mmdb
    pruneDays: 378 # 54 weeks
    pruneCheckHours: 24
    sessionTimeoutMin: 30

  tuning:
    queueSize: 640000
    batchMaxSize: 6400
    batchMaxMsec: 500
    requestRateLimit: 10
    bodyMaxSize: 2048
    staticCacheMaxAge: 3600
    validEventNames: "" # default if empty: "load", "visible", "hidden", "hashchange", "ping"

  # metrics and debugging
  admin:
    adminPort: 8001
    disableHostMetrics: true
    debug: false

  postgres:
    host: postgres
    port: 5432
    database: picolytics
    # choose user or userExistingSecret
    # user: picolytics
    userExistingSecret:
      name: picolytics-db
      key: username
    # choose password or passwordExistingSecret
    # password: ""
    passwordExistingSecret:
      name: picolytics-db
      key: password
    pgSslMode: prefer
    pgConnAttempts: 5
    skipMigrations: false

  replicaCount: 1

  image:
    repository: ghcr.io/nmcclain/picolytics
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8000

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

postgresql:
  enabled: true
  global:
    #storageClass: ""
    postgresql:
      auth:
        existingSecret: ""
        secretKeys:
          adminPasswordKey: ""
          userPasswordKey: ""
          replicationPasswordKey: ""
  primary:
    initdb:
      scripts:
        init_picolytics.sh: |
          set -e
          export set PGPASSWORD=${POSTGRES_PASSWORD}
          psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
              CREATE DATABASE picolytics;
              \c picolytics
              CREATE USER $POSTGRES_PICOLYTICS_USER WITH PASSWORD '$POSTGRES_PICOLYTICS_PASSWORD';
              GRANT ALL PRIVILEGES ON DATABASE picolytics TO $POSTGRES_PICOLYTICS_USER;
              GRANT ALL PRIVILEGES ON SCHEMA public TO picolytics;
              CREATE USER $POSTGRES_GRAFANA_USER WITH PASSWORD '$POSTGRES_GRAFANA_PASSWORD';
              GRANT CONNECT ON DATABASE picolytics TO $POSTGRES_GRAFANA_USER;
              GRANT USAGE ON SCHEMA public TO $POSTGRES_GRAFANA_USER;
              ALTER DEFAULT PRIVILEGES FOR ROLE picolytics IN SCHEMA public GRANT SELECT ON TABLES TO $POSTGRES_GRAFANA_USER;
          EOSQL
    extraEnvVars: # for init script
      - name: POSTGRES_USER
        value: postgres
      - name: POSTGRES_PICOLYTICS_USER
        valueFrom:
          secretKeyRef:
            name: picolytics-db
            key: user
      - name: POSTGRES_PICOLYTICS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: picolytics-db
            key: password
      - name: POSTGRES_GRAFANA_USER
        valueFrom:
          secretKeyRef:
            name: picolytics-db-grafana
            key: picolytics_db_user
      - name: POSTGRES_GRAFANA_PASSWORD
        valueFrom:
          secretKeyRef:
            name: picolytics-db-grafana
            key: picolytics_db_password

victoria-metrics-single:
  enabled: true
  server:
    enabled: true
    name: server
    image:
      repository: victoriametrics/victoria-metrics
      tag: v1.95.1
      pullPolicy: IfNotPresent
    persistentVolume:
      enabled: true
      storageClass: ""
      size: 256Mi
    scrape:
      enabled: true
      config:
        global:
          scrape_interval: 15s
        scrape_configs:
          - job_name: victoriametrics
            static_configs:
              - targets: [ "localhost:8428" ]
          - job_name: picolytics
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
                action: keep
                regex: picolytics
              - source_labels: [__meta_kubernetes_pod_container_port_name]
                action: keep
                regex: admin
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: pod

grafana:
  enabled: true
  persistence:
    enabled: true
    size: 128Mi
  admin:
    existingSecret: picolytics-grafana
    userKey: user
    passwordKey: password
  plugins: 
    - grafana-clock-panel
    - marcusolsson-static-datasource
    - marcusolsson-json-datasource
  envFromSecret: picolytics-db-grafana
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  dashboardsConfigMaps:
    default: picolytics-dashboards
  sidecar:
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 50Mi
    datasources:
      enabled: true
